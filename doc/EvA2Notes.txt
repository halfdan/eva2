EvA2-Cheats:
The following method names are reserved:
globalInfo: return String, used to display information about a class 
getName: return String, used as short name replacing the class name
hideHideable: void, set hide property of all properties which should not be displayed in the current object state
customPropertyOrder: return String[], for the given properties the given ordering will be enforced
getGOEPropertyUpdateLinks: return String[] which is interpreted in pairs indicating that on an update of the i-th property, the i+1-th property
        should be updated. This is useful for changes within sub-classes of the target
        which are not directly displayed in this panel but in sub-panels (and there have an own view etc.)

The following static properties are reserved:
public static boolean hideFromGOE: if true, the class will not be available for loading in GUI drop-down boxes.

RMI-Probleme:

- Funny Bug: when starting JavaEvA from Matlab and reading jar packages, the conversion
//					dynCP = valids.toArray(dynCP);
from nonempty ArrayList<String> valids to String[] dynCP causes Matlab to crash reproducibly, and 
without Exception. A conversion afoot works fine, though. This cost me about an hour to find out.

- Bei Naming.(re)bind und Naming.lookup muss wahrscheinlich bei Client und Server der gleiche String
(Name des Servers) verwendet werden. Im Code steht da mehrmals "attention" und die Art, wie der String
erzeugt wird, ist nicht wirklich klar.

- Per RMI wird in der GUI beim GO-Modul der Optimizer nicht angezeigt. Das liegt daran, daß 
ein RMI-Proxy immer nur die Methoden eines Interfaces zur Verfügung stellt. Das unterliegende
InterfaceGOParameters hat aber keine setOptimizer-Methode, was auch sinnvoll ist, da die
meisten Module für genau einen Optimizer zuständig sind (DEParameters, GAParameters etc.)

Lösung 1: Dem Interface die Setter-Methode wieder geben und für die spezifischen Module deaktivieren.
Dabei gibts dann das Problem, daß per RMI nur der Interface-Teil einzelner Module gesehen wird, d.h.
die spezifischen Parameter zB für HC- oder DE-Modul können garnicht angezeigt werden.

Lösung 2: Dem PSP mitteilen, dass es den Setter bei Proxies von "woanders" holen soll. Wird wohl schwer.

- RMI scheint jetzt zu funktionieren. Ein Problem lag in der StatisticsWithGUI, wo serverseitig 
irgendwo ein isVaid() von Graph aufgerufen wurde, das kein Proxy war. Wird stattdessen auf GraphWindow
zugegriffen, das ein Proxy ist, funktioniert es. 

- Die Unterscheidung, ob eine lokale Instanz oder eine RMI-Verbindung verwendet wird, fällt 
jetzt in EvAComAdapter. Dort wird die RMI Registry jetzt auch nebenläufig erzeugt, das kann
noch für Ärger sorgen, wenn kein Netz vorhanden ist. Jedenfalls wird im EvAComAdapter beim 
Zugriff auf Module überprüft, ob lokal oder remote gearbeitet wird, das passiert insbesondere
in getModuleAdapter und getModuleNameList. Die Entscheidung letztlich wird aber in EvAClient 
getroffen, wo setRunLocally des EvAComAdapters aufgerufen wird.

- Die setConnection/hasConnection Properties von ModuleAdapter haben jetzt den Sinn bekommen,
zwischen lokalem und remote-Adapter zu unterscheiden.

ToDo:
Features:
- new Interface "ProblemOptimumKnown" for (unimodal) problems with known opt. position
	--> useable for a new performance measure "distance to optimum" in plot!
- plot->save as jpg: add other formats like png?
- load modules: textlistener window seems not to be forwarded correctly
- PostProcess: adaptive step-size for HC post-process might be better. 
- "Show Solution" from GOStandalone into Client?
- Kommandozeilen-Argumente für den Client?
- MOCCOStandalone: actually nice, repair maybe...

Bugs: 
- GOE/Properties and JavaBeans: There is an issue if an object propterty change
triggers other object changes accessible to the
user. If this happens within the same instance (O.varX is changed and influences O.varY), it is
fine and displayed by the GOE due to the update event. However if O.varX influences O.U.varY
(where U has its own parameter panel instance), this
will not be visible to the user as O does not trigger updates of child panels.
This is why sometimes the population size is out of sync in some strategy implementations. (mk, 10/08)
- Seems that there may be another reason: some optimizers recreate their population instance in 
every iteration. Since the GUI editors save the target objects they represent, this causes
problems because the gui editors do not retrieve the new instance on every edit. This means the
user is editing an old (invalid) instance which is dead w.r.t. to the optimizer. This is BAD.
Look at how PropertySheetPanel is used - theres the target instance given by GOEPanel.setObject but
not refreshed when editing internal fields, e.g. (mk, 2/09)
	Example for this: old version of PF - when setting the popSize, PF:setPopulation is sometimes called,
	but not always. Why is that?? - Its not consistently reproducible!!!

 
- PropertyFilePath only works for "real" files, not within the Probs jar. Look atTSPLibTSPInstance.setFile 
- Population -> getBest... use multi-objective methods!
- PostProcess: the pp-button should be deactivated if other modules are loaded
- possible problem with new interfaces in RMI mode?
- Kontroll-Events (start/stop) werden über RMI nicht wieder an den GUI-Client geliefert, 
	das sollte noch eingeführt werden.
- Beim server-wechsel bleibt das alte Plot-Fenster stehen, müsste auch besser gehn.
- Die cloneInPlace: noch überall cloneEAObjects aufrufen?
- Lokal läuft es jetzt auch ohne Netz. Die Entscheidung, wann wo ein Proxy nötig ist,
sollte aber unbedingt durchsichtiger fallen. Man suche nach Stellen, die Proxies erzeugen!
Vielleicht eine public static boolean im EvAClient??
- Das Auflösen des Hostnames ("myHostName", "myHostAddress") nur einmal bzw. nur da machen wo
es wirklich nötig ist!
- die doofen Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at javaeva.gui.DPointSetMultiIcon.paint(DPointSetMultiIcon.java:353)
	endlich killen.
- ZB ESIndividual: Bei hohen Dimensionen kann es schlecht sein, in jedem Ind. nochmal
die Range mitzuführen, da sie häufig für alle gleich ist. Dann verschlingt sie unnötig Speicher.
- die Mutationsoperatoren sollten jetzt CloneableInPlace implementieren!
- always override hashCode when you override equals!
	--> developer.java.sun.com/developer/Books/effectiveava/
- History und Archive: Kommentar bzw. Schalter!
- Graph/Plot aufräumen: Graph scheint nur ein "Label" zu sein, über das auf ein GraphPointSet innerhalb
	eines FunctionArea elements zugegriffen wird. Eher chaotisch also.
- JOpt bug in wsi.ra.chart2d.ScaledBorder Zeile 460 - Endlosschleife!?
- cloneInPlace bei Individuen wird die Object-Daten aus AbstractEAIndividual idR nicht kopieren!
- da nicht alle Klassen "hashCode" ableiten, kann es bei Verwendung von HashMaps o.ä. zu Problemen kommen

Main changelog:
- CBN now also works with (m+n)-ES, not only (m,n)-ES
11.3.08 (mkron)
- Finally fixed problem with logarithmic view and values <= 0.
- Added PostProcessing parameters to GOParameters, also some data output.
- Removed some redundant code by introducing AbstractGOParameters.
- A Population may now notify a listener if a number of evaluations has been performed, allows for adaptive population sizes.
- ClusteringHillClimbing: a multi-start hill climber which regularly reduces clusters of similar individuals to representatives,
	thereby getting more effective, if the clustering sigma paramter is sensible.
- Introduced InterfaceMultiModalProblemKnown to tag functions with known multiple optima. The old InterfaceMultiModalProblem
	remains as tag for problems which may have multiple optima which are unknown.
- Removed some overhead in modules.XXParameters, as well as in the FnProblems and FM?Problems.
- Cleaned up FM5-FM8 which should now be consistent and not baustellen any more.
- Strategies now have a method getAllSolutions, mostly the same as getPopulation, but allowing for returning more than 
	just the last population, e.g. an archive of earlier solutions (e.g. good for CBN)
- CBN can now also be used with PSO. Seems not to work so well, however, as PSO tends to break the species spacial distribution.
25.2.08 (mkron)
- Renamed some Interfaces
- Split up the statistics classes to inherit from an AbstractStatistics class to remove redundancy and
	produce homogenous ouput.
- Moved the data output stream to the statistics class completely. The Processor still triggers most of it, however.
- Added a simpleproblems package for quick (and not so dirty) starting with user problem integration.
- Introduced AbstractDoubleProblem and AbstractBinaryProblem as additional abstraction layer in Problem hierarchy.
- Added a Lyx document "JavaEvA 2 Short Introduction"
- Added MatlabProblem, a Matlab interface class. It will compile only with the Matlab jar on the classpath,
	this will be a ToDo
- Added a PhenotypeConvergeneTerminator: terminates on converged phenotype (using PhenotypeMetric)
Before 02.08 (mkron)
- On reloading an Object, the GUI window title is now updated (PropertyDialog)
- ConvergenceTerminator allows for multi-objective fitness
- Taken over nice the Progress-Bar of GOStandaloneVersion
- No more ServerListFile in the ComAdapter constructor
